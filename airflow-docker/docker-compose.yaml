version: '3'

x-airflow-common: &airflow-common
  build: 
    context: .
    dockerfile: Dockerfile
  environment: &airflow-common-env
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres-airflow/airflow
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow/airflow
    AIRFLOW__DATABASE__LOAD_DEFAULT_CONNECTIONS: 'true'
    AIRFLOW_CONN_POSTGRES_DEFAULT: postgresql://airflow:airflow@postgres-airflow:5432/airflow
    AIRFLOW_CONN_POSTGRES_DATA: 'postgresql+psycopg2://realestate:realestate123@postgres-data:5432/realestate'
    POSTGRES_USER: airflow
    POSTGRES_PASSWORD: airflow
    POSTGRES_DB: airflow
    POSTGRES_HOST: postgres
    POSTGRES_PORT: 5432
    AIRFLOW__SMTP__SMTP_HOST: your_smtp_host
    AIRFLOW__SMTP__SMTP_PORT: '587'
    AIRFLOW__SMTP__SMTP_USER: jeonhun6084@gmail.com
    AIRFLOW__SMTP__SMTP_PASSWORD: your_password
    AIRFLOW__SMTP__SMTP_MAIL_FROM: jeonhun6084@gmail.com
    TOR_PASSWORD: '6084'
  volumes: &airflow-common-volumes
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./data:/opt/airflow/dags/data
    - ./requirements.txt:/opt/airflow/requirements.txt
  user: airflow

x-airflow-depends-on: &airflow-common-depends-on
  postgres-airflow:
    condition: service_healthy
  postgres-data:
    condition: service_healthy

services:
  postgres-airflow:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5434:5432"
    volumes:
      - postgres-airflow-db-volume:/var/lib/postgresql/data
      - ./airflow-init.sql:/docker-entrypoint-initdb.d/airflow-init.sql
    networks:
      - airflow-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow", "-d", "airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-data:
    image: postgis/postgis:13-3.3
    environment:
      POSTGRES_USER: realestate
      POSTGRES_PASSWORD: realestate123
      POSTGRES_DB: realestate
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data-db-volume:/var/lib/postgresql/data
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql
    networks:
      - airflow-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "realestate", "-d", "realestate"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ["postgres", "-c", "max_connections=1000", "-c", "shared_buffers=256MB"]

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: always
    networks:
      - airflow-network
    environment:
      <<: *airflow-common-env
      AIRFLOW__WEBSERVER__SECRET_KEY: gkadudxo1234

  airflow-scheduler:
    <<: *airflow-common
    entrypoint: []
    command: >
      /bin/sh -c '
        pip install --no-cache-dir -r /opt/airflow/requirements.txt;
        /usr/local/bin/airflow scheduler
      '
    healthcheck:
      test: ["CMD", "/usr/local/bin/airflow", "jobs", "check", "--job-type", "SchedulerJob", "--hostname", "${HOSTNAME}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    networks:
      - airflow-network
    environment:
      <<: *airflow-common-env
      PYTHONPATH: /opt/airflow
      PATH: "/usr/local/bin:/home/airflow/.local/bin:${PATH}"
    depends_on:
      <<: *airflow-common-depends-on
      init:
        condition: service_completed_successfully

  init:
    <<: *airflow-common
    command: version
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin
      _AIRFLOW_WWW_USER_EMAIL: jeonhun6084@gmail.com
      _AIRFLOW_WWW_USER_FIRSTNAME: Anonymous
      _AIRFLOW_WWW_USER_LASTNAME: Admin
    restart: on-failure
    networks:
      - airflow-network
    depends_on:
      postgres-airflow:
        condition: service_healthy

  tor:
    image: dperson/torproxy
    ports:
      - "9050:9050"
      - "9051:9051"
    environment:
      - PASSWORD=6084
    networks:
      - airflow-network
    restart: always

  django:
    build: 
      context: ./real_estate_api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DB_NAME=realestate
      - DB_USER=realestate
      - DB_PASSWORD=realestate123
      - DB_HOST=postgres-data
      - DB_PORT=5432
      - DATABASE_URL=postgresql://realestate:realestate123@postgres-data:5432/realestate
      - DJANGO_SECRET_KEY=django-insecure-i0))6=p4h8#6kujj*)%i+&8h_+uu19#=(!=(owbep^qcv&j9#+
      - DJANGO_DEBUG=True
    volumes:
      - ./real_estate_api:/app
    depends_on:
      - postgres-data
    networks:
      - airflow-network
    command: sh -c "chmod +x /app/entrypoint.sh && /app/entrypoint.sh"

volumes:
  postgres-airflow-db-volume:
  postgres-data-db-volume:

networks:
  airflow-network:
    driver: bridge
    name: airflow-network
